import Head from 'next/head'
import { Box, Button, TextField } from '@mui/material'
import { useState } from 'react'
import { useRouter } from 'next/router'
//import from connects.ts in api folder
import { registerUser } from '../api/connects'

export default function Register() {

  const [username, setUsername] = useState('')
  const [password, setPassword] = useState('')
  const [email, setEmail] = useState('')
  const [passwordConfirm, setConfirmPassword] = useState('')
  const [name, setName] = useState('')

  const router = useRouter()

  async function register() {
      try {
          const user = await registerUser(username, email, password, passwordConfirm, name)
          console.log(user)
          router.push('/dashboard')
      }
      catch (error) {
          console.log(error)
      }
  }


  return (
      <>
      <Head>
          <title>Programvareutvikling</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
          <div className='flex flex-col items-center pt-40 gap-5'>
              <img src='/logo2.svg' alt='logo' width={200} height={200} />
              <Box
              component="form"
              noValidate
              autoComplete="off">

              <div className='grid gap-3'>

                  <TextField
                      id="username-input"
                      label="Username"
                      type="username"
                      autoComplete="current-password"
                      onChange={(e) => setUsername(e.target.value)}
                  />
                  <TextField
                      id="name-input"
                      label="Name"
                      type="name"
                      autoComplete="current-password"
                      onChange={(e) => setName(e.target.value)}
                  />
                  <TextField
                      id="email-input"
                      label="E-mail"
                      type="email"
                      autoComplete="current-password"
                      onChange={(e) => setEmail(e.target.value)}
                  />
                  <TextField
                      id="password-input"
                      label="Password"
                      type="password"
                      autoComplete="current-password"
                      onChange={(e) => setPassword(e.target.value)}

                  />
                  <TextField
                      id="confirmPassword-input"
                      label="Confirm Password"
                      type="password"
                      autoComplete="current-password"
                      onChange={(e) => setConfirmPassword(e.target.value)}

                  />
                  
              </div>
          </Box>
              <Button variant="outlined" className='w-20' onClick={register}>Register</Button>
          </div>
      </main>
      </>
  )
}
export async function getFriends() {
    pocketbase.autoCancellation(false);
    const user = pocketbase.authStore.model;
    const friends = await pocketbase.collection('users').getList(1, 20, {
        filter: 'users.friends.id == ' + user?.id
    });
    return friends;
}
